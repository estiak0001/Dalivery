#pragma checksum "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "29369f97bf38d92dbdce70057d9becc526d7a862"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "H:\Hardware QC\WebAppEs\WebAppEs\Views\_ViewImports.cshtml"
using WebAppEs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "H:\Hardware QC\WebAppEs\WebAppEs\Views\_ViewImports.cshtml"
using WebAppEs.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"29369f97bf38d92dbdce70057d9becc526d7a862", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"df22ec340b1f909b83f6693521f173f392f6d3ac", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<WebAppEs.ViewModel.Home.DashboasrViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("txtFilterDate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control form-control-sm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/ZingChart/zingchart.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!-- top tiles -->\r\n<div class=\"row\"");
            BeginWriteAttribute("style", " style=\"", 161, "\"", 169, 0);
            EndWriteAttribute();
            WriteLiteral(@">
    <h1>Dashboard</h1>
</div>

<div style=""display:none"" class=""container"">
    <div class=""row"">

        <div class=""col-lg-6 col-md-6 col-sm-12"">
            <div class=""card-counter danger"">
                <h2 style=""position: absolute; display: block; color: white; padding-left: 45px;"">Today Total</h2>
                <i class=""fa fa-code-fork""></i>
                <span class=""count-numbers"">");
#nullable restore
#line 19 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                       Write(Model.TodayTF);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                <div style=\"padding-left: 45px;\">\r\n                    <span class=\"count-name\"><span style=\"color: bisque;\">Functional: </span><span style=\"font-size:18px\">");
#nullable restore
#line 21 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                                                                                                     Write(Model.TodayTFFunc);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span> &nbsp;&nbsp;&nbsp; <span style=\"color: bisque;\">Aesthetic: </span><span style=\"font-size:18px\">");
#nullable restore
#line 21 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                                                                                                                                                                                                                              Write(Model.TodayTFAes);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>&nbsp;&nbsp;&nbsp; <span style=\"color: bisque;\">Total Check: </span><span style=\"font-size:18px\">");
#nullable restore
#line 21 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                                                                                                                                                                                                                                                                                                                                                       Write(Model.TodayTotalCheck);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span></span>
                </div>
            </div>
        </div>
        <div class=""col-lg-6 col-md-6 col-sm-12"">
            <div class=""card-counter primary"">
                <h2 style=""position: absolute; display: block; color: white; padding-left: 45px;"">Last Day Total</h2>
                <i class=""fa fa-code-fork""></i>
                <span class=""count-numbers"">");
#nullable restore
#line 29 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                       Write(Model.LastDayTF);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                <div style=\"padding-left: 45px;\">\r\n                    <span class=\"count-name\"><span style=\"color: bisque;\">Functional: </span><span style=\"font-size:18px\">");
#nullable restore
#line 31 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                                                                                                     Write(Model.LastDayTFFunc);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span> &nbsp;&nbsp;&nbsp; <span style=\"color: bisque;\">Aesthetic: </span><span style=\"font-size:18px\">");
#nullable restore
#line 31 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                                                                                                                                                                                                                                Write(Model.LastDayTFAes);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span> &nbsp;&nbsp;&nbsp; <span style=\"color: bisque;\">Total Check: </span><span style=\"font-size:18px\">");
#nullable restore
#line 31 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                                                                                                                                                                                                                                                                                                                                                            Write(Model.LastDayTotalCheck);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span></span>
                </div>
            </div>
        </div>
        <div class=""col-lg-6 col-md-6 col-sm-12"">
            <div class=""card-counter success"">
                <h2 style=""position: absolute; display: block; color: white; padding-left: 45px;"">Last Week Total</h2>
                <i class=""fa fa-code-fork""></i>
                <span class=""count-numbers"">");
#nullable restore
#line 39 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                       Write(Model.LastWeekTF);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                <div style=\"padding-left: 45px;\">\r\n                    <span class=\"count-name\"><span style=\"color: bisque;\">Functional: </span><span style=\"font-size:18px\">");
#nullable restore
#line 41 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                                                                                                     Write(Model.LastWeekTFFunc);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span> &nbsp;&nbsp;&nbsp; <span style=\"color: bisque;\">Aesthetic: </span><span style=\"font-size:18px\">");
#nullable restore
#line 41 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                                                                                                                                                                                                                                 Write(Model.LastWeekTFAes);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>&nbsp;&nbsp;&nbsp; <span style=\"color: bisque;\">Total Check: </span><span style=\"font-size:18px\">");
#nullable restore
#line 41 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                                                                                                                                                                                                                                                                                                                                                             Write(Model.LastWeekTotalCheck);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</span></span>
                </div>
            </div>
        </div>
        <div class=""col-lg-6 col-md-6 col-sm-12"">
            <div style=""background-color: #137b89;"" class=""card-counter info"">
                <h2 style=""position: absolute; display: block; color: white; padding-left: 45px;"">Last Month Total</h2>
                <i class=""fa fa-code-fork""></i>
                <span class=""count-numbers"">");
#nullable restore
#line 49 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                       Write(Model.LastMonthTF);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n                <div style=\"padding-left: 45px;\">\r\n                    <span class=\"count-name\"><span style=\"color: bisque;\">Functional: </span><span style=\"font-size:18px\">");
#nullable restore
#line 51 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                                                                                                     Write(Model.LastMonthTFFunc);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span> &nbsp;&nbsp;&nbsp; <span style=\"color: bisque;\">Aesthetic: </span><span style=\"font-size:18px\">");
#nullable restore
#line 51 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                                                                                                                                                                                                                                  Write(Model.LastMonthTFAes);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span> &nbsp;&nbsp;&nbsp; <span style=\"color: bisque;\">Total Check: </span><span style=\"font-size:18px\">");
#nullable restore
#line 51 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                                                                                                                                                                                                                                                                                                                                                                                Write(Model.LastMonthTotalCheck);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n");
            WriteLiteral(@"


    <div style=""height:1700px"" class=""row"">
        <div class=""col-md-12"">
            <div style=""overflow:scroll"" id=""myDiv"" class=""x_panel"">
                <div class=""x_title"">
                    <h2>Faults Summary <small>Daily report</small></h2>
                    <div class=""filter"">
                        <button style=""float:right"" class=""btn btn-warning"" id=""theButton""><i class=""fa fa-expand""></i></button>
                        <div");
            BeginWriteAttribute("id", " id=\"", 4359, "\"", 4364, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"pull-right\" style=\"background: #fff; cursor: pointer; padding: 5px 10px;\">\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "29369f97bf38d92dbdce70057d9becc526d7a86215016", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
#nullable restore
#line 73 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.Date);

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </div>
                    </div>
                    <div class=""clearfix""></div>
                </div>
                <div class=""x_content"">
                    <div class=""row"">
                        <div class=""col-md-12"">
                            <div id=""myChart"" class=""chart--container""></div>
                        </div>
                        
                    </div>
                    <div class=""row"">
                        <div class=""col-md-12"">
                            <div id=""myChart2"" class=""chart--container""></div>
                        </div>
                        
                    </div>
                    <div class=""row"">
                        <div class=""col-md-6"">
                            <div id=""pieChart"" class=""chart--container""></div>
                        </div>
                        <div class=""col-md-6"">
                            <div id=""pieChart2"" class=""chart--container""></div>
            ");
            WriteLiteral("            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    <script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "29369f97bf38d92dbdce70057d9becc526d7a86218016", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

    <script>
        $(document).ready(function () {
            $('#theButton').click(function () {
                //$('#myDiv').toggleClass('fullscreen');
                if (
                    document.fullscreenElement ||
                    document.webkitFullscreenElement ||
                    document.mozFullScreenElement ||
                    document.msFullscreenElement
                ) {
                    if (document.exitFullscreen) {
                        document.exitFullscreen();
                    } else if (document.mozCancelFullScreen) {
                        document.mozCancelFullScreen();
                    } else if (document.webkitExitFullscreen) {
                        document.webkitExitFullscreen();
                    } else if (document.msExitFullscreen) {
                        document.msExitFullscreen();
                    }
                } else {
                    element = $('#myDiv').get(0);
                    if (element.requestF");
                WriteLiteral(@"ullscreen) {
                        element.requestFullscreen();
                    } else if (element.mozRequestFullScreen) {
                        element.mozRequestFullScreen();
                    } else if (element.webkitRequestFullscreen) {
                        element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
                    } else if (element.msRequestFullscreen) {
                        element.msRequestFullscreen();
                    }
                }
                
            });

");
                WriteLiteral(@"
            $('#txtFilterDate').on('change', function () {
                //alert($('#txtFilterDate').val().trim());
                var data = {
                    Date: $('#txtFilterDate').val().trim(),
                    }
                    $.ajax({
                        data: data,
                        url: '");
#nullable restore
#line 165 "H:\Hardware QC\WebAppEs\WebAppEs\Views\Home\Index.cshtml"
                         Write(Url.Action("LoadChartDataBayFilter", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        type: 'GET',
                        dataType: ""JSON"",
                        contentType: ""application/json"",
                        success: function (result) {
                            if (result != null) {
                                console.log(result);
                                LoadChart(result.lavel.lavelName, result.functionalFaultsPercentageViewModel.production, result.functionalFaultsPercentageViewModel.material, result.functionalFaultsPercentageViewModel.software);
                                LoadPieChart(result.functionalFaultsPercentageViewModel.totalFuncProductionFaultPercent, result.functionalFaultsPercentageViewModel.totalFuncMaterialFaultPercent, result.functionalFaultsPercentageViewModel.totalFuncSoftwareFaultPercent);

                                LoadChart2(result.lavel.lavelName, result.aestheticFaultsPercentageViewModel.production, result.aestheticFaultsPercentageViewModel.material);
                                LoadPieChart2");
                WriteLiteral(@"(result.aestheticFaultsPercentageViewModel.totalAestheticProductionFaultPercent, result.aestheticFaultsPercentageViewModel.totalAestheticMaterialFaultPercent);
                            }
                        }
                    });
            });

            ZC.LICENSE = [""569d52cefae586f634c54f86dc99e6a9"", ""b55b025e438fa8a98e32482b5f768ff5""];
            window.addEventListener('load', function () {
                LoadChart(LoadDataForChartLavel, LoadDataForFunctionalProduction, LoadDataForFunctionalMaterial, LoadDataForFunctionalSoftware);
                LoadChart2(LoadDataForChartLavel, LoadDataForAesProduction, LoadDataForAesMaterial);
                LoadPieChart(FunProFault, FunMatFault, FunSoftFault);
                LoadPieChart2(AesProFault, AesMatFault);
            });
            function LoadChart(lavel, production, Material, Software) {
                //alert();
                const myConfig = {
                    fontSize: 2,
                    
               ");
                WriteLiteral(@"     type: 'bar',
                    title: {
                        text: 'Functional Fault Percentage',
                        fontSize: 14,
                        color: 'black'
                    },
                    ""plotarea"": {
                        ""margin"": ""dynamic"",
                        
                    },
                    legend: {
                        draggable: true,
                    },
                    gui: {
                        behaviors: [ //default contextMenu behaviors
                            {
                                id: ""Reload"", //built-in id
                                enabled: ""all"" //sets visibility to show
                            },
                            {
                                id: ""SaveAsImage"",
                                enabled: ""all""
                            },
                            {
                                id: ""DownloadPDF"", //built-in id
                          ");
                WriteLiteral(@"      enabled: ""all"" //sets visibility to show
                            },
                            {
                                id: ""DownloadSVG"",
                                enabled: ""all""
                            },
                            {
                                id: ""Print"",
                                enabled: ""none""
                            },
                            {
                                id: ""ViewSource"", //built-in id
                                enabled: ""none"" //sets visibility to hide
                            },
                            {
                                id: ""About ZingChart"" //removed with licensing
                            }
                        ]
                    },
                    scaleX: {
                        // set scale label
                        label: {
                            text: 'Line, Model and Lot Wise Faults',
                        },
                    ");
                WriteLiteral(@"    ""item"": {
                            ""font-size"": 9,
                            ""font-weight"": ""bold"",
                            ""color"": ""black""
                        },
                        // convert text on scale indices
                        labels: lavel,
                        zooming: true,
                        zoomTo: [
                            0,
                            9
                        ]
                    },
                    scaleY: {
                        label: {
                            text: 'Faults Percentage'
                        }
                    },


                    plot: {
                        decimals: 2,
                        'value-box': {
                            text: '%v%',
                            'font-size': 9
                        },
                        tooltip: {
                            decimals: 2,
                        },
                        // animation docs here:
");
                WriteLiteral(@"                        animation: {
                            effect: 'ANIMATION_EXPAND_BOTTOM',
                            method: 'ANIMATION_STRONG_EASE_OUT',
                            sequence: 'ANIMATION_BY_NODE',
                            speed: 275,
                        }
                    },
                    scrollX: {
                        bar: {
                            alpha: 0.5,
                            backgroundColor: '#a6a6a6',
                            borderRadius: '5px'
                        },
                        handle: {
                            backgroundColor: 'white',
                            borderRadius: '5px',
                            borderTop: '1px solid #a6a6a6',
                            borderRight: '1px solid #a6a6a6',
                            borderBottom: '1px solid #a6a6a6',
                            borderLeft: '1px solid #a6a6a6'
                        }
                    },
                    serie");
                WriteLiteral(@"s: [{
                        // plot 1 values, linear data
                        values: production,
                        text: 'Production',
                        backgroundColor: '#ef5350'
                    },

                    {
                        // plot 2 values, linear data
                        values: Material,
                        text: 'Material',
                        backgroundColor: '#007bff'
                    },

                    {
                        // plot 2 values, linear data
                        values: Software,
                        text: 'Software',
                        backgroundColor: '#66bb6a'
                    }
                    ]
                };

                zingchart.render({
                    id: 'myChart',
                    data: myConfig,
                    height: '100%',
                    width: '100%'
                });
            }
            function LoadPieChart(productionpie, Ma");
                WriteLiteral(@"terialpie, Softwarepie) {
                var myConfig = {
                    type: ""pie"",
                    gui: {
                        behaviors: [ //default contextMenu behaviors
                            {
                                id: ""Reload"", //built-in id
                                enabled: ""all"" //sets visibility to show
                            },
                            {
                                id: ""SaveAsImage"",
                                enabled: ""all""
                            },
                            {
                                id: ""DownloadPDF"", //built-in id
                                enabled: ""all"" //sets visibility to show
                            },
                            {
                                id: ""DownloadSVG"",
                                enabled: ""all""
                            },
                            {
                                id: ""Print"",
                           ");
                WriteLiteral(@"     enabled: ""none""
                            },
                            {
                                id: ""ViewSource"", //built-in id
                                enabled: ""none"" //sets visibility to hide
                            },
                            {
                                id: ""About ZingChart"" //removed with licensing
                            }
                        ]
                    },
                    plot: {
                        borderColor: ""#2B313B"",
                        //decimals: 4,
                        borderWidth: 3,
                        // slice: 90,
                        valueBox: {
                            placement: 'out',
                            //text: '%t\n%npv%',
                            text: '%t\n%v%',
                            fontFamily: ""Open Sans""
                        },
                        tooltip: {
                            fontSize: '18',
                            fontFa");
                WriteLiteral(@"mily: ""Open Sans"",
                            padding: ""5 10"",
                            text: ""%v%""
                        },
                        animation: {
                            effect: 2,
                            method: 5,
                            speed: 675,
                            sequence: 1
                        }
                    },
                    source: {
                        //text: 'gs.statcounter.com',
                        fontColor: ""#8e99a9"",
                        fontFamily: ""Open Sans""
                    },
                    title: {
                        fontColor: ""black"",
                        text: 'Overall Fault Percentage (Functional)',
                        align: ""center"",
                        fontSize: 14
                    },
                    //subtitle: {
                    //    offsetX: 10,
                    //    offsetY: 10,
                    //    fontColor: ""#8e99a9"",
                 ");
                WriteLiteral(@"   //    fontFamily: ""Open Sans"",
                    //    fontSize: ""16"",
                    //    text: 'May 2016',
                    //    align: ""left""
                    //},
                    plotarea: {
                        margin: ""20 0 0 0""
                    },
                    series: [{
                        values: productionpie,
                        text: ""Production"",
                        backgroundColor: '#ef5350',
                    },
                    {
                        values: Materialpie,
                        text: ""Material"",
                        backgroundColor: '#007bff',
                        //detached: true
                    },
                    {
                        values: Softwarepie,
                        text: 'Software',
                        backgroundColor: '#66bb6a',
                        //detached: true
                    }
                    ]
                };

                zingchart");
                WriteLiteral(@".render({
                    id: 'pieChart',
                    data: myConfig,
                    height: '100%',
                    width: '100%'
                });
            }
            function LoadChart2(lavel, production, Material) {
                //alert();
                const myConfig = {
                    type: 'bar',
                    title: {
                        text: 'Aesthetic Fault Percentage',
                        fontSize: 14,
                        color: 'black'
                    },
                    legend: {
                        draggable: true,
                    },
                    gui: {
                        behaviors: [ //default contextMenu behaviors
                            {
                                id: ""Reload"", //built-in id
                                enabled: ""all"" //sets visibility to show
                            },
                            {
                                id: ""SaveAsImage"",");
                WriteLiteral(@"
                                enabled: ""all""
                            },
                            {
                                id: ""DownloadPDF"", //built-in id
                                enabled: ""all"" //sets visibility to show
                            },
                            {
                                id: ""DownloadSVG"",
                                enabled: ""all""
                            },
                            {
                                id: ""Print"",
                                enabled: ""none""
                            },
                            {
                                id: ""ViewSource"", //built-in id
                                enabled: ""none"" //sets visibility to hide
                            },
                            {
                                id: ""About ZingChart"" //removed with licensing
                            }
                        ]
                    },
                    sca");
                WriteLiteral(@"leX: {
                        label: {
                            text: 'Line, Model and Lot Wise Faults'
                        },
                        ""item"": {
                            ""font-size"": 9,
                            ""font-weight"": ""bold"",
                            ""color"": ""black""
                        },
                        labels: lavel,
                        zooming: true,
                        zoomTo: [
                            0,
                            9
                        ]
                    },
                    scaleY: {
                        // scale label with unicode character
                        label: {
                            text: 'Faults Percentage'
                        }
                    },

                    plot: {
                        decimals: 2,
                        'value-box': {
                            text: '%v%',
                            'font-size': 9
                     ");
                WriteLiteral(@"   },
                        tooltip: {
                            decimals: 2,
                        },
                        // animation docs here:
                        animation: {
                            effect: 'ANIMATION_EXPAND_BOTTOM',
                            method: 'ANIMATION_STRONG_EASE_OUT',
                            sequence: 'ANIMATION_BY_NODE',
                            speed: 275,
                        }
                    },
                    scrollX: {
                        bar: {
                            alpha: 0.5,
                            backgroundColor: '#a6a6a6',
                            borderRadius: '5px'
                        },
                        handle: {
                            backgroundColor: 'white',
                            borderRadius: '5px',
                            borderTop: '1px solid #a6a6a6',
                            borderRight: '1px solid #a6a6a6',
                            borderBotto");
                WriteLiteral(@"m: '1px solid #a6a6a6',
                            borderLeft: '1px solid #a6a6a6'
                        }
                    },
                    series: [{
                        // plot 1 values, linear data
                        values: production,
                        text: 'Production',
                        backgroundColor: '#ef5350'
                    },
                    {
                        // plot 2 values, linear data
                        values: Material,
                        text: 'Material',
                        backgroundColor: '#007bff'
                    }
                    ]
                };

                zingchart.render({
                    id: 'myChart2',
                    data: myConfig,
                    height: '100%',
                    width: '100%'
                });
            }
            function LoadPieChart2(productionpie, Materialpie) {
                var myConfig = {
                    type: ""pie"",");
                WriteLiteral(@"
                    gui: {
                        behaviors: [ //default contextMenu behaviors
                            {
                                id: ""Reload"", //built-in id
                                enabled: ""all"" //sets visibility to show
                            },
                            {
                                id: ""SaveAsImage"",
                                //enabled: ""all""
                            },
                            {
                                id: ""DownloadPDF"", //built-in id
                                enabled: ""all"" //sets visibility to show
                            },
                            {
                                id: ""DownloadSVG"",
                                enabled: ""all""
                            },
                            {
                                id: ""Print"",
                                enabled: ""none""
                            },
                            {
      ");
                WriteLiteral(@"                          id: ""ViewSource"", //built-in id
                                enabled: ""none"" //sets visibility to hide
                            },
                            {
                                id: ""About ZingChart"" //removed with licensing
                            }
                        ]
                    },
                    plot: {
                        borderColor: ""#2B313B"",
                        //decimals: 4,
                        borderWidth: 3,
                        // slice: 90,
                        valueBox: {
                            placement: 'out',
                            text: '%t\n%v%',
                            fontFamily: ""Open Sans""
                        },
                        tooltip: {
                            fontSize: '18',
                            fontFamily: ""Open Sans"",
                            padding: ""5 10"",
                            text: ""%v%""
                        },
      ");
                WriteLiteral(@"                  animation: {
                            effect: 2,
                            method: 5,
                            speed: 675,
                            sequence: 1
                        }
                    },
                    title: {
                        fontColor: ""black"",
                        text: 'Overall Fault Percentage (Aesthetic)',
                        align: ""center"",
                        fontSize: 14,
                    },
                    //subtitle: {
                    //    offsetX: 10,
                    //    offsetY: 10,
                    //    fontColor: ""#8e99a9"",
                    //    fontFamily: ""Open Sans"",
                    //    fontSize: ""16"",
                    //    text: 'May 2016',
                    //    align: ""left""
                    //},
                    plotarea: {
                        margin: ""20 0 0 0""
                    },
                    series: [{
                        ");
                WriteLiteral(@"values: productionpie,
                        text: ""Production"",
                        backgroundColor: '#ef5350',
                    },
                    {
                        values: Materialpie,
                        text: ""Material"",
                        backgroundColor: '#007bff',
                        //detached: true
                    }
                    ]
                };

                zingchart.render({
                    id: 'pieChart2',
                    data: myConfig,
                    height: '100%',
                    width: '100%'
                });
            }
        });
    </script>
");
            }
            );
            WriteLiteral(@"

<style>
    .card-counter {
        box-shadow: 2px 2px 10px #DADADA;
        margin: 5px;
        padding: 20px 10px;
        background-color: #fff;
        height: 100px;
        border-radius: 5px;
        transition: .3s linear all;
    }

        .card-counter:hover {
            box-shadow: 4px 4px 20px #DADADA;
            transition: .3s linear all;
        }

        .card-counter.primary {
            background-color: #007bff;
            color: #FFF;
        }

        .card-counter.danger {
            background-color: #ef5350;
            color: #FFF;
        }

        .card-counter.success {
            background-color: #66bb6a;
            color: #FFF;
        }

        .card-counter.info {
            background-color: #26c6da;
            color: #FFF;
        }

        .card-counter i {
            font-size: 5em;
            opacity: 0.2;
        }

        .card-counter .count-numbers {
            position: absolute;
            right: ");
            WriteLiteral(@"35px;
            top: 20px;
            font-size: 32px;
            display: block;
        }

        .card-counter .count-name {
            position: absolute;
            top: 65px;
            text-transform: capitalize;
            display: block;
            font-size: 13px;
        }
    #pieChart {
        width: 100%;
        height: 100%;
        min-height: 450px;
    }


    .chart--container {
        height: 100%;
        width: 100%;
        min-height: 450px;
    }

    .zc-ref {
        display: none;
    }

    #myChart-license-text {
        display: none !important;
    }

    #myDiv.fullscreen {
        z-index: 9999;
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;
        left: 0;
    }
    div[id$=""license""] {
        display: none !important;
    }
</style>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<WebAppEs.ViewModel.Home.DashboasrViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
